<?php

// src/Controller/EventsController.php

namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\Routing\Annotation\Route;
use App\Repository\EventRepository;
use Symfony\Component\HttpFoundation\Response;

 class EventsController extends AbstractController
{
    /**
     * @Route("/events", name="events")
     */
    public function getEvents(EventRepository $eventRepository): Response
    {
        // Récupérer les événements depuis la base de données
        $events = $eventRepository->findAll();

        // Passer les événements à la vue
        return $this->render('events/index.html.twig', [
            'events' => $events,
        ]);
    }
}


<?php

namespace App\Controller;

use App\Repository\EventRepository;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\Routing\Annotation\Route;

class EventsController extends AbstractController
{
    /**
     * @Route("/events", name="app_events")
     */
    public function index(EventRepository $eventRepository): JsonResponse
    {
        $events = $eventRepository->findAll();

        $formattedEvents = [];
        foreach ($events as $event) {
            $formattedEvents[] = [
                'title' => $event->getTitle(),
                'start' => $event->getStartDate()->format('Y-m-d\TH:i:s'),
                'end' => $event->getEndDate()->format('Y-m-d\TH:i:s'),
                'description' => $event->getDescription(),
            ];
        }

        return new JsonResponse($formattedEvents);
    }
}

// src/Controller/EventsController.php
namespace App\Controller;

use App\Repository\EventRepository;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;

class EventsController extends AbstractController
{
    /**
     * @Route("/events", name="app_events")
     */
    public function index(Request $request, EventRepository $eventRepository)
    {
        // Check if the request expects JSON
        if ($request->getAcceptableContentTypes()[0] === 'application/json') {
            // If JSON is expected, fetch events from the repository
            $events = $eventRepository->findAll();

            // Format events into an array suitable for JSON response
            $formattedEvents = [];
            foreach ($events as $event) {
                $formattedEvents[] = [
                    'title' => $event->getTitle(),
                    'start' => $event->getStartDate()->format('Y-m-d\TH:i:s'),
                    'end' => $event->getEndDate()->format('Y-m-d\TH:i:s'),
                    'description' => $event->getDescription(),
                ];
            }

            // Return JSON response
            return new JsonResponse($formattedEvents);
        }

        // If the request does not expect JSON, render the Twig view
        return $this->render('events/index.html.twig');
    }
}
